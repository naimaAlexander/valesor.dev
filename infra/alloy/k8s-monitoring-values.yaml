cluster:
  name: local.valesor.dev
externalServices:
  prometheus:
    host: https://prometheus-us-central1.grafana.net
    secret:
      create: false
      name: grafana-cloud-credentials-metrics
      namespace: alloy
  loki:
    host: https://logs-prod-017.grafana.net
    secret:
      create: false
      name: grafana-cloud-credentials-logs
      namespace: alloy
  tempo:
    host: https://tempo-us-central1.grafana.net:443
    secret:
      create: false
      name: grafana-cloud-credentials-traces
      namespace: alloy
metrics:
  enabled: true
  cost:
    enabled: true
  node-exporter:
    enabled: true
logs:
  enabled: true
  pod_logs:
    enabled: true
  cluster_events:
    enabled: true
traces:
  enabled: true
receivers:
  grpc:
    enabled: true
  http:
    enabled: true
  zipkin:
    enabled: true
opencost:
  enabled: true
  opencost:
    exporter:
      defaultClusterId: local.valesor.dev
    prometheus:
      existingSecretName: grafana-cloud-credentials-metrics
      external:
        url: https://prometheus-us-central1.grafana.net/api/prom
kube-state-metrics:
  enabled: true
prometheus-node-exporter:
  enabled: true
prometheus-operator-crds:
  enabled: false
alloy: {}
alloy-events: {}
alloy-logs: {}

# Alloy Configuration for Postgres Exporter and Scraping

extraConfig:
  # Configure the Postgres exporter
  prometheus:
    exporter:
      postgres:
        integrations_postgres_exporter:
          data_source_names:
            - "postgresql://localhost:5432/postgres"

  # Configure service discovery and relabeling rules for Prometheus
  discovery:
    relabel:
      integrations_postgres_exporter:
        targets: ${prometheus.exporter.postgres.integrations_postgres_exporter.targets}
        rules:
          - target_label: "instance"
            replacement: "${constants.hostname}"
          - target_label: "job"
            replacement: "integrations/postgres_exporter"

  # Prometheus scrape configuration for the Postgres exporter
  prometheus:
    scrape:
      integrations_postgres_exporter:
        targets: ${discovery.relabel.integrations_postgres_exporter.output}
        forward_to: ${prometheus.remote_write.metrics_service.receiver}
        job_name: "integrations/postgres_exporter"

  # Log file configuration for PostgreSQL logs with Loki
  local:
    file_match:
      logs_integrations_postgres_exporter:
        path_targets:
          - __address__: "localhost"
            __path__: "/var/log/postgresql/postgres.log"
            instance: "${constants.hostname}"
            job: "integrations/postgres_exporter"

  # Forward the log data to Loki
  loki:
    source:
      file:
        logs_integrations_postgres_exporter:
          targets: ${local.file_match.logs_integrations_postgres_exporter.targets}
          forward_to: ${loki.write.grafana_cloud_loki.receiver}


cluster:
  name: local.valesor.dev
externalServices:
  prometheus:
    host: https://prometheus-us-central1.grafana.net
    secret:
      create: false
      name: grafana-cloud-credentials-metrics
      namespace: alloy
  loki:
    host: https://logs-prod-017.grafana.net
    secret:
      create: false
      name: grafana-cloud-credentials-logs
      namespace: alloy
  tempo:
    host: https://tempo-us-central1.grafana.net:443
    secret:
      create: false
      name: grafana-cloud-credentials-traces
      namespace: alloy
metrics:
  enabled: true
  cost:
    enabled: true
  node-exporter:
    enabled: true
logs:
  enabled: true
  pod_logs:
    enabled: true
  cluster_events:
    enabled: true
traces:
  enabled: true
receivers:
  grpc:
    enabled: true
  http:
    enabled: true
  zipkin:
    enabled: true
opencost:
  enabled: true
  opencost:
    exporter:
      defaultClusterId: local.valesor.dev
    prometheus:
      existingSecretName: grafana-cloud-credentials-metrics
      external:
        url: https://prometheus-us-central1.grafana.net/api/prom
kube-state-metrics:
  enabled: true
prometheus-node-exporter:
  enabled: true
prometheus-operator-crds:
  enabled: false
alloy: {}
alloy-events: {}
alloy-logs: {}

# Alloy Configuration for Postgres Exporter and Scraping

extraConfig: 
  prometheus:
    exporter:
      postgres: "integrations_postgres_exporter"
      config:
        data_source_names:
          - "postgresql://localhost:5432/postgres"
    discovery:
      relabel:
        - target_label: "instance"
          replacement: "constants.hostname"
        - target_label: "job"
          replacement: "integrations/postgres_exporter"
    scrape:
      job_name: "integrations/postgres_exporter"
      targets:
        - "localhost:9187"
      forward_to:
        - "prometheus.remote_write.metrics_service.receiver"

  loki:
    source:
      file:
        name: "logs_integrations_postgres_exporter"
        path_targets:
          - __address__: "localhost"
            __path__: "/var/log/postgresql/postgres.log"
            instance: "constants.hostname"
            job: "integrations/postgres_exporter"
    forward_to:
      - "loki.write.grafana_cloud_loki.receiver"